import time
st=time.time()
def knapsack_01(max_weight, weights, values, n):
    dp = [[0 for _ in range(max_weight + 1)] for _ in range(n + 1)]

    for i in range(n + 1):
        for w in range(max_weight + 1):
            if i == 0 or w == 0:
                dp[i][w] = 0
            elif weights[i - 1] <= w:
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w])
            else:
                dp[i][w] = dp[i - 1][w]

    max_profit = dp[n][max_weight]
    selected_items = []
    total_weight = max_weight

    for i in range(n, 0, -1):
        if max_profit <= 0:
            break
        if max_profit == dp[i - 1][total_weight]:
            continue
        else:
            selected_items.append(i - 1)
            max_profit -= values[i - 1]
            total_weight -= weights[i - 1]

    selected_items.reverse()
    return dp[n][max_weight], selected_items

# Example usage:
weights = [2, 3, 4, 5]
values = [3, 4, 5, 6]
max_weight = 5
num_items = len(values)

max_profit, selected_items = knapsack_01(max_weight, weights, values, num_items)

print("Maximum Profit:", max_profit)
print("Selected items:", selected_items)
end=time.time()
print("Time taken :", end-st, "seconds")
